SI 206 W17
Put your name here:Sam Karmin
----

Which option for the final project are you choosing -- 1, 2, or 3?
I am choosing option 2 for my final project!


THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?
One of my classes for this project will be called “Movie”.


* What will that class take as input to its constructor?
For an input, the Movie Class will accept a dictionary which will represent a specific movie.


* What will 1 instance of this class represent?
One of instance of this class will represent an array of different information on a singular movie. 


* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?
Three of the instance variables of the Movie Class will be called tittle, director, IMBD movie rating, but there is room for more. The tittle instance variable will collect the official tittle of the movie, the director instance variable will gather the name(s) of the director of the film, and the IMBD variable will gather the rating of the movie from IMBD. These instance variables are important because this information will need to be easily accessible when running certain methods, and by saving it to an instance variable, we don’t have to relook it up each time we want to access the information.

* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 
ONE METHOD:

- What will the name of the method be?
The name of this method will be called __str__ method as it will return a string with crucial pieces of information, allowing the viewer to get a quick glimpse of the crucial details retaining to the movie. 

- What will the method do?
This method will returning a string describing the movie using the tittle director, actors, and possible ratings. 

- Will it take any additional input? 
As of now, this movie will not need any additional inputs, however if I choose to make this an extensive recap, I may need to draw from more information than just the instance variables. 
 
- Will it return anything? Should it change anything about the instance/an instance variable? 
This method will return a string, but will not alter the instance or the instance variable.

- Why is it useful for this class definition, in this program?
This is useful for the class, as well as the program in general, because it quickly provides the user with a nice glimpse at what the movie is about if they want to continue to pursue it.         

ANOTHER METHOD:
- What will the name of the method be?
get_movie_actors

- What will the method do?
This method will return a dictionary of the lead actors and the role they played in the movie. 

- Will it take any additional input? 
There won’t be any necessary additional inputs for this method.

- Will it return anything? Should it change anything about the instance/an instance variable? 
This method will return a dictionary with the actor being the key, and the value being the role the actor played. This method will NOT change the instances or the instance variable.

- Why is it useful for this class definition, in this program?
This method is critical as it will make my life as a programmer much easier when I start to search for twitter data about specific actors. With this result, I can refer to this dictionary saved in a variable when I use another class to search for related twitter results. 

[If you definitely want to have a third, feel free to answer those questions a third time, because you'll have to do so eventually. when you write documentation!]


* What will the tables in your database be?
A Tweets table
A Users table (for Twitter users)
A Movies table


* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.

The field for these data bases will be very similar to the way the tables in Project 3 were organized: 
Tweets:
- 'Tweets (tweet_id TEXT PRIMARY KEY, text TEXT, user_id TEXT (Must reference USER table), num_favorites INTEGER, num_ retweets INTEGER)'

Users:
- Users (user_id INTEGER PRIMARY KEY, screen_name TEXT, description TEXT)' 

Movie Table:
- Users (user_ID INTEGER PRIMARY KEY, title TEXT, director TEXT, rating INTEGER, lead_actor TEXT)

* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be joining the Tweets table and the Users table")

I want to make a query that accesses the numbers of retweets, and the rating of the movie -- so I'll be joining the Tweets table and the Users table

I want to make a query that accesses the lead actor, and the rating of the movie -- so I'll be joining the Tweets table and the Users table


* What are at least 2 of the data processing mechanics you're planning to use? 
I plan to utilize both dictionary accumulation and set compression in order to process the data collected.



* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
Dictionary accumulation will be extremely beneficial when trying to assess a movie based upon the number or retweets correlated with that movie. 

Because users often tweet more than once about a given topic, set comprehension will be helpful as it will allow me to identify how many different people are tweeting about the movie, not simply how many tweets there are.


* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
Although this can change at any point, I plan on writing a CSV file containing an array of statistics on the three movies searched. They will be ranked in order of popularity, all based upon ratings, the popularity of the lead actor, and how popular the movie is on twitter. Lastly, a brief description of the each film will be provided using twitter data. 
